Given an integer array nums, find a contiguous non-empty subarray within the array that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.

A subarray is a contiguous subsequence of the array.

 

Example 1:

Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.

Code :
class Solution {
    public int maxProduct(int[] nums) {
        int n = nums.length;
        if(n==0)
            return 0;
        if(n==1)    
            return nums[0];
        int curr = 1;
        int max = 0;
        for(int i=0;i<n;i++){
            curr = curr*nums[i];
            max = Math.max(max,curr);
            if(curr == 0)
                curr = 1;
        }
        curr=1;
        for(int i=n-1;i>=0;i--){
            curr = curr*nums[i];
            max = Math.max(max,curr);
            if(curr == 0)
                curr = 1;
        }
        return max;
    }
}
